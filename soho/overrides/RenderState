/*
 * PROPRIETARY INFORMATION.  This software is proprietary to
 * Side Effects Software Inc., and is not to be reproduced,
 * transmitted, or disclosed in any way without written permission.
 *
 * COMMENTS:
 * When the user selects a render region in the viewport, this file is
 * parsed to provide "overrides" for SOHO parameter evaluation.
 * Instead of querying the camera, the values described in this value
 * will be used instead.
 *
 * The viewport sets some variables which can be used to specify
 * parameter values.  Alternatively, constant values can also be
 * specified.  The variables are:
 *
 *	$cam_xform	- The camera's transform
 *	$projection	- The projection ("ortho" or "perspective")
 *	$orthowidth	- Ortho width
 *	$focal		- Focal length
 *	$aperture	- Aperture
 *	$win		- Window offset channels
 *	$winsize	- Window size channels
 *	$viewport_res	- Resolution of the viewport
 *
 *	$socket		- The Houdini socket device listening for tile data
 *
 * These overrides are applied to the CAMERA object given in the
 * initialization of SOHO.
 *
 * FILE STRUCTURE:
 *	Please see ViewportRender for details.
 *
 * NOTES:
 *	This file is used to provide overrides when rendering from the
 *	render state in the Houdini viewports.  The render state
 *	expects the image to be written to the socket specified by
 *	$socket.  It may be necessary to modify the soho programs for
 *	the render generation to handle this properly.
 */

// Common viewport overrides.  These are the standard camera parameters.
{
    override.name	CommonView

    soho_overridefile	[ "RenderState" ]
    camera	[ $camera ]
    focal	[ $focal ]
    aspect	[ 1 ]			// Always square pixels in the display
    cropl	[ $cropl ]
    cropr	[ $cropr ]
    cropb	[ $cropb ]
    cropt	[ $cropt ]
    override_camerares	[ 0 ]
    soho_forceheadlight	[ $forceheadlight ]
    soho_outputmode	[ "0" ]		// Force rendering by pipe command
}

// Viewport overrides for VMantra
{
    override.inherit	CommonView
    override.name	VMantra

    // Force the render to go to the "ip" device
    vm_picture			[ "ip" ]
    vm_device			[ "" ]
    vm_image_mplay_socketport	[ "$socket" ]
    vm_stylesheets		[ "$stylesheets" ]
    vm_preview			[ "$preview" ]
    vm_relightingbuffer		[ "$relightingbuffer" ]
    vm_renderinterrupt		[ "$renderinterrupt" ]
    vm_previewtime		[ "$previewtime" ]
    vm_previewmode		[ "$previewmode" ]
}

// Viewport overrides for RIB
{
    // This override will be used when a specific target can't be found
    override.inherit		CommonView
    override.name		RIB

    ri_device			[ "houdini" ]
    ri_display			[ "iprsocket:$socket" ]
    ri_numaov			[ 0 ]
}

// Viewport overrides for MI
{
    override.inherit		CommonView
    override.name		MI
    mi_filename0		[ "socket:$socket" ]
    mi_filetype0		[ "mplay" ]	// Houdini mplay device
    mi_numoutput		[ 0 ]		// Additional output
}

