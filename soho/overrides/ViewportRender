/*
 * PROPRIETARY INFORMATION.  This software is proprietary to
 * Side Effects Software Inc., and is not to be reproduced,
 * transmitted, or disclosed in any way without written permission.
 *
 * COMMENTS:
 *
 * When rendering from the viewport, it may be desireable to override some
 * parameter values.  For example, since the user is asking for a quick preview
 * render, it may be desireable to change to render to an interactive device.
 *
 * The viewport provides several parameters which can be used to evaluate
 * values from the viewport settings.  These are:
 *
 *	$cam_xform	- The camera's transform
 *	$projection	- The projection ("ortho" or "perspective")
 *	$orthowidth	- Ortho width
 *	$focal		- Focal length
 *	$aperture	- Aperture
 *	$win		- Window offset channels
 *	$winsize	- Window size channels
 *	$viewport_res	- The actual resolution of the viewport
 *	$viewport_name	- The path to the Houdini UI viewport
 *
 * These overrides are applied to the CAMERA object given in the
 * initialization of SOHO.
 *
 * FILE STRUCTURE:
 *	The file is processed via the C pre-processor:
 *	  - Use #include to include files
 *	  - You can use #ifdef, #define etc.
 *
 *	The first occurance of the file found in $HOUDINI_PATH/soho/override
 *	will be parsed.  It should include any other files it needs.
 *
 *	Each set of overrides has two properties:
 *	   override.name	<style>/<target>
 *
 *	The style in the override.name should match the render style
 *	which the SOHO script was initialized with (e.g. VMantra, RIB).
 *
 *	If the target isn't specified, these settings will be used
 *	when a specific target version of a render isn't found.
 *
 *	Each set of overrides may inherit from a previously defined set of
 *	overrides.  This is done through the override.inherit directive:
 *		override.inherit   style/target
 *	If the target is omitted, the "default" settings for the
 *	render style will be used as the base.  The inherit option
 *	must occur before any other parameter definitions.
 *
 *	Set the HOUDINI_SCRIPT_DEBUG environment variable to see
 *	warnings.
 */

// Common viewport overrides.  These are the standard camera parameters.
{
    override.name	CommonView

    soho_overridefile	[ "ViewportRender" ]
    space:world [ $cam_xform ]
    res		[ $viewport_res ]		// Viewport resolution
    aspect	[ $aspect ]
    projection	[ $projection	 ]
    orthowidth	[ $orthowidth ]
    focal	[ $focal ]
    aperture	[ $aperture ]
    near	[ $near ]
    far		[ $far ]
    win		[ $win ]
    winsize	[ $winsize ]
    cropl	[ $cropl ]
    cropr	[ $cropr ]
    cropb	[ $cropb ]
    cropt	[ $cropt ]
    soho_outputmode	[ "0" ]		// Force rendering by pipe command
    viewport_name	[ $viewport_name ]
}

// Viewport overrides for VMantra
{
    override.inherit	CommonView
    override.name	VMantra

    // Force the render to go to the "ip" device
    vm_picture		[ "ip" ]
    vm_image_mplay_framemode  [ "append" ]
    vm_image_mplay_rendermode [ "current" ]
    vm_rendersource	[ "SceneView" ]
    vm_device		[ "" ]
}

// Viewport overrides for RIB
{
    // This override will be used when a specific target can't be found
    override.inherit		CommonView
    override.name		RIB

    ri_device		[ "houdini" ]
}


// Viewport overrides for MI
{
    // This override will be used when a specific target can't be found
    override.inherit	CommonView
    override.name	MI

    mi_filetype0	[ "mplay" ]
}

